// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"PB/pkg/models/shared"
	"net/http"
)

type CreateNewBird200ApplicationJSONMeta struct {
	Pagination *shared.Pagination `json:"pagination,omitempty"`
	TraceID    *string            `json:"traceId,omitempty"`
}

func (o *CreateNewBird200ApplicationJSONMeta) GetPagination() *shared.Pagination {
	if o == nil {
		return nil
	}
	return o.Pagination
}

func (o *CreateNewBird200ApplicationJSONMeta) GetTraceID() *string {
	if o == nil {
		return nil
	}
	return o.TraceID
}

// CreateNewBird200ApplicationJSON - OK
type CreateNewBird200ApplicationJSON struct {
	Data *shared.NestedBird                   `json:"data,omitempty"`
	Meta *CreateNewBird200ApplicationJSONMeta `json:"meta,omitempty"`
}

func (o *CreateNewBird200ApplicationJSON) GetData() *shared.NestedBird {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *CreateNewBird200ApplicationJSON) GetMeta() *CreateNewBird200ApplicationJSONMeta {
	if o == nil {
		return nil
	}
	return o.Meta
}

type CreateNewBirdResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	CreateNewBird200ApplicationJSONObject *CreateNewBird200ApplicationJSON
}

func (o *CreateNewBirdResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CreateNewBirdResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CreateNewBirdResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *CreateNewBirdResponse) GetCreateNewBird200ApplicationJSONObject() *CreateNewBird200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.CreateNewBird200ApplicationJSONObject
}
