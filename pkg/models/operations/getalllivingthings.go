// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"bytes"
	"encoding/json"
	"errors"
	"net/http"
)

type GetAllLivingThingsRequest struct {
	// include all filters
	Filter []interface{} `queryParam:"style=form,explode=true,name=filter"`
}

func (o *GetAllLivingThingsRequest) GetFilter() []interface{} {
	if o == nil {
		return nil
	}
	return o.Filter
}

type GetAllLivingThings200ApplicationJSONType string

const ()

type GetAllLivingThings200ApplicationJSON struct {
	Type GetAllLivingThings200ApplicationJSONType
}

func (u *GetAllLivingThings200ApplicationJSON) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	return errors.New("could not unmarshal into supported union types")
}

func (u GetAllLivingThings200ApplicationJSON) MarshalJSON() ([]byte, error) {

	return json.Marshal(nil)

}

type GetAllLivingThingsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	GetAllLivingThings200ApplicationJSONObject *GetAllLivingThings200ApplicationJSON
}

func (o *GetAllLivingThingsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetAllLivingThingsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetAllLivingThingsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetAllLivingThingsResponse) GetGetAllLivingThings200ApplicationJSONObject() *GetAllLivingThings200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.GetAllLivingThings200ApplicationJSONObject
}
